name: Build Linux (Development)

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    name: Linux Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Gather Info
      - name: Check Shell
        run: echo $SHELL

      - name: Check Number of Cores
        run: nproc

      - name: Check Directory
        run: echo $(pwd)

      - name: Check OS Version
        run: cat /etc/os-release

      - name: Check Architecture
        run: uname -a

      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4

      # Additional Dependencies
      - name: Setup Linux Dependencies
        run: |
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt install clang -y
          sudo apt install cmake -y
          sudo apt install ninja-build -y
          sudo apt install pkg-config -y
          sudo apt install libgtk-3-dev -y
          sudo apt install liblzma-dev -y

      # Main Dependencies
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.2'
          channel: 'stable'

      - name: Verify Flutter
        run: |
          flutter --version
          flutter doctor --verbose

      - name: Disable Flutter Analytics
        run: flutter config --no-analytics

      - name: Install Dependencies
        run: flutter pub get

      # Testing
      - name: Run Tests
        # run: |
        #   dart fix --dry-run
        #   dart test shared/test --reporter github --concurrency=4 --chain-stack-traces
        run: dart fix --dry-run

      # Build
      - name: Build Linux
        run: flutter build linux --release

      # Release
      - name: Extract Version
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/linux/x64/release/bundle/**/*
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}