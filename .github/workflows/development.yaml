name: Build (Release Candidate)

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev

jobs:
  setup:
    name: Setup
    runs-on: macos-latest

    steps:
      #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.2'
          channel: 'stable'

      #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

  build-android:
    name: Build Android
    runs-on: macos-latest
    needs: setup

    steps:
      #1 Build APK
      - name: Build APK
        run: flutter build apk --flavor development --release

      #2 Building App Bundle (aab)
      - name: Build appBundle
        run: flutter build appbundle --flavor development --release
      
  build-ios:
    name: Build IOS
    runs-on: macos-latest
    needs: setup

    steps:
      #1 Build IPA
      - name: Build IPA
        run: flutter build ipa --no-codesign --flavor development --release

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: setup

    steps:
      #1 Build EXE
      - name: Build EXE
        run: flutter build windows --release

  build-macos:
    name: Build MacOS
    runs-on: macos-latest
    needs: setup

    steps:
      #1 Build DMG
      - name: Build DMG
        run: flutter build macos --release

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: setup

    steps:
      #1 Build Linux
      - name: Build Linux
        run: flutter build linux --release

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: setup

    steps:
      #1 Build Web
      - name: Build Web
        run: flutter build web --release

  compress:
    name: Compress
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-windows, build-macos, build-linux, build-web]

    steps:
      #1 Compress Archives and IPAs
      - name: Compress Archives and IPAs
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

  upload:
    name: Upload
    runs-on: ubuntu-latest
    needs: compress

    steps:
      #1 Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-development.apk
            build/app/outputs/bundle/release/app-development.aab
            build/ios_build.tar.gz
            build/windows/x64/runner/Release/*.exe
            build/macos/Build/Products/Release/*.dmg
            build/linux/release/bundle
            build/web

      #2 Extract Version
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      #3 Check if Tag Exists
      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      #4 Modify Tag if it Exists
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV
      
      #5 Create Release
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/flutter-apk/app-development.apk
            build/app/outputs/bundle/release/app-development.aab
            build/ios_build.tar.gz
            build/windows/x64/runner/Release/*.exe
            build/macos/Build/Products/Release/*.dmg
            build/linux/release/bundle
            build/web
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}
